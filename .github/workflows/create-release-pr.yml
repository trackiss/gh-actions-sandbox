name: Create release PR
on:
  workflow_dispatch:
    inputs:
      pr-title-suffix:
        description: タイトルの接尾辞
        required: false

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - run: npm install github-pr-release
      - name: Setup PR template
        run: |
          echo "Release $(TZ=Asia/Tokyo date '+%Y-%m-%d')${RELEASE_PR_TITLE_SUFFIX:+ ${RELEASE_PR_TITLE_SUFFIX}}
          {{#prs}}
          - #{{number}}
          {{/prs}}
          "
          echo "Release $(TZ=Asia/Tokyo date '+%Y-%m-%d')${RELEASE_PR_TITLE_SUFFIX:+ ${RELEASE_PR_TITLE_SUFFIX}}
          {{#prs}}
          - #{{number}}
          {{/prs}}
          " > ./release-pr-template.mustache
        env:
          RELEASE_PR_TITLE_SUFFIX: ${{ github.event.inputs.pr-title-suffix }}
      - uses: actions/github-script@v6
        with:
          script: |
            const fs = require("fs");
            const releaseMessage = require("github-pr-release/lib/release-message.js");
            const GithubClient = require("github-pr-release/lib/github-client.js");
            const path = require("path");
            
            const config = {
              token: '${{ secrets.GITHUB_TOKEN }}',
              owner: context.repo.owner,
              repo:  context.repo.repo,
              head:  'develop',
              base:  'main',
              template: './release-pr-template.mustache'
            };

            const release = function createReleasePR(config) {
              const client = new GithubClient(config);

              return client.prepareReleasePR().then(function (releasePR) {
                return client.collectReleasePRs(releasePR).then(function (prs) {
                  const templatePath = config.template || path.join(__dirname, "release.mustache");
                  const template = fs.readFileSync(templatePath, "utf8");
                  const message = releaseMessage(template, prs);

                  return client.updatePR(releasePR, message);
                })
              })
            };

            release(config).then(function (pullRequest) {
              console.log(pullRequest);
            });
