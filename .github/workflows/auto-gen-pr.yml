name: test
on:
  workflow_dispatch:
    inputs:
      branch-name:
        description: new branch name
        required: true
jobs:
  create-new-branch:
    runs-on: ubuntu-latest
    steps:
      - name: generate GitHub Apps token
        id: generate-github-apps
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}
      - name: extract base branch name
        id: extract-base-branch
        run: |
          echo "##[set-output name=name;]$(echo ${GITHUB_REF##*/})"
          echo base branch: ${GITHUB_REF##*/}
      - name: checkout base branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.extract-base-branch.outputs.name }}
      - name: create and push new branch
        run: |
          git branch feature/${{ github.event.inputs.branch-name }}
          git push origin feature/${{ github.event.inputs.branch-name }}
          echo 'created branch: ${{ steps.extract-base-branch.outputs.name }} -> feature/${{ github.event.inputs.branch-name }}.'
      - name: checkout new branch
        uses: actions/checkout@v2
        with:
          ref: feature/${{ github.event.inputs.branch-name }}
      - name: create new empty commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit --allow-empty -m "[GitHub Actions] empty commit"
          git push
          echo 'created commit.'
      - name: create new draft PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ steps.generate-github-apps-token.output.tokens }}
          script: |
            github.rest.pulls.create({
              owner: 'trackiss',
              repo: 'gh-actions-sandbox',
              title: 'test',
              head: 'feature/${{ github.event.inputs.branch-name }}',
              base: '${{ steps.extract-base-branch.outputs.name }}',
              draft: true
            })
